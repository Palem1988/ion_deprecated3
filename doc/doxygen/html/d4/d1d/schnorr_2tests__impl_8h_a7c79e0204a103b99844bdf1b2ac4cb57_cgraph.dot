digraph "test_schnorr_threshold"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node132 [label="test_schnorr_threshold",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node132 -> Node133 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node133 [label="secp256k1_rand_bits",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d0b/testrand_8h.html#a70a3e97a30b94a77f4a59807ba01e6ba",tooltip="Generate a pseudorandom number in the range [0..2**bits-1]. "];
  Node132 -> Node134 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node134 [label="secp256k1_rand_int",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d0b/testrand_8h.html#a2e2064cdf87588f68f4ba3131f5d9353",tooltip="Generate a pseudorandom number in the range [0..range-1]. "];
  Node132 -> Node135 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node135 [label="secp256k1_rand256_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d0b/testrand_8h.html#ac7dd7cc19d5d0ae9b50791656b57af7b",tooltip="Generate a pseudorandom 32-byte array with long sequences of zero and one bits. "];
  Node132 -> Node136 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node136 [label="secp256k1_ec_seckey\l_verify",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a366f922fc0c787351e82ff8e3a95f652",tooltip="Verify an ECDSA secret key. "];
  Node136 -> Node137 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node137 [label="secp256k1_scalar_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a25cc2d45ae1d1765d07c3313cdf46fa0",tooltip="Set a scalar from a big endian byte array. "];
  Node136 -> Node138 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node138 [label="secp256k1_scalar_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a3f0ac84fe49a1c1f51212582a2c149d4",tooltip="Check whether a scalar equals zero. "];
  Node136 -> Node139 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node139 [label="secp256k1_scalar_clear",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#ad8fb9bc2a828903963bf37806d8edd11",tooltip="Clear a scalar to prevent the leak of sensitive data. "];
  Node132 -> Node140 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node140 [label="secp256k1_ec_pubkey\l_create",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a7438071aa8a6dc4697abe4f4659f2161",tooltip="Compute the public key for a secret key. "];
  Node140 -> Node141 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node141 [label="secp256k1_ecmult_gen\l_context_is_built",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d76/ecmult__gen_8h.html#a9a40662d6ed2cbab43dbddc25f570f97"];
  Node140 -> Node137 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node140 -> Node138 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node140 -> Node142 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node142 [label="secp256k1_ecmult_gen",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d76/ecmult__gen_8h.html#a5ed744c720cbb0a397c8d4c42c637f24",tooltip="Multiply with the generator: R = a*G. "];
  Node140 -> Node143 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node143 [label="secp256k1_ge_set_gej",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#aa511eebf8cd7419763f06555ed4fb62d",tooltip="Set a group element equal to another which is given in jacobian coordinates. "];
  Node140 -> Node144 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node144 [label="secp256k1_pubkey_save",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#aa061c9c5c861017bef990e5c4653e0f4"];
  Node144 -> Node145 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node145 [label="secp256k1_ge_to_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad6499ae629f998e50d8614869ee3c67f",tooltip="Convert a group element to the storage type. "];
  Node144 -> Node146 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node146 [label="memcpy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a0f46826ab0466591e136db24394923cf"];
  Node146 -> Node147 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node147 [label="memmove",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a9778d49e9029dd75bc53ecbbf9f5e9a1"];
  Node146 -> Node148 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node148 [label="__chk_fail",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a424ac71631da5ada2976630ff67051d1"];
  Node144 -> Node149 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node149 [label="secp256k1_ge_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ac83592db46af97faf7ba9b9a39a1f6ff",tooltip="Check whether a group element is the point at infinity. "];
  Node144 -> Node150 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node150 [label="secp256k1_fe_normalize_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a2d45c987537eadb2923c93aa3af9db71",tooltip="Normalize a field element, without constant-time guarantee. "];
  Node144 -> Node151 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node151 [label="secp256k1_fe_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#abb1017649be14b9ac1823be3c573e542",tooltip="Convert a field element to a 32-byte big endian value. "];
  Node140 -> Node139 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node132 -> Node152 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node152 [label="secp256k1_schnorr_generate\l_nonce_pair",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df6/secp256k1__schnorr_8h.html#a62dd4ce1d4843fe3a4d73ee44d142cb3",tooltip="Generate a nonce pair deterministically for use with secp256k1_schnorr_partial_sign. "];
  Node152 -> Node141 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node152 -> Node137 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node152 -> Node138 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node152 -> Node142 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node152 -> Node143 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node152 -> Node144 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node152 -> Node139 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node132 -> Node153 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node153 [label="secp256k1_ec_pubkey\l_combine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a4d9b18720afc67f3685a9f171bac6737",tooltip="Add a number of public keys together. "];
  Node153 -> Node154 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node154 [label="secp256k1_gej_set_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a2c6b24a2db08260d89e891eab7035b2c",tooltip="Set a group element (jacobian) equal to the point at infinity. "];
  Node153 -> Node155 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node155 [label="secp256k1_pubkey_load",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#a9966ec041e71010d1593ae2211ffb843"];
  Node155 -> Node146 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node155 -> Node156 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 [label="secp256k1_ge_from_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a8c1e7f328284d9ba56404bb8d99bf765",tooltip="Convert a group element back from the storage type. "];
  Node155 -> Node157 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node157 [label="secp256k1_fe_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a5c86a65052e3b135919c00fe2233a43d",tooltip="Set a field element equal to 32-byte big endian value. "];
  Node155 -> Node158 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 [label="secp256k1_ge_set_xy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a34ab3d1a9a0a7ff0ed1cedff9db5f73c",tooltip="Set a group element equal to the point with given X and Y coordinates. "];
  Node155 -> Node159 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node159 [label="secp256k1_fe_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a619ec4805df6cc54d70e6682ceebd098",tooltip="Verify whether a field element is zero. "];
  Node153 -> Node160 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node160 [label="secp256k1_gej_add_ge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a586b55d5921edcd68799f584c0a3c58d",tooltip="Set r equal to the sum of a and b (with b given in affine coordinates, and not infinity). "];
  Node153 -> Node161 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node161 [label="secp256k1_gej_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a33786d5853579c92d46fac51f6a40093",tooltip="Check whether a group element is the point at infinity. "];
  Node153 -> Node143 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node153 -> Node144 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node132 -> Node162 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node162 [label="secp256k1_schnorr_partial_sign",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df6/secp256k1__schnorr_8h.html#a9887da00f1d053c0c86b865bad5b8d82",tooltip="Produce a partial Schnorr signature, which can be combined using secp256k1_schnorr_partial_combine, to end up with a full signature that is verifiable using secp256k1_schnorr_verify. "];
  Node162 -> Node141 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node162 -> Node137 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node162 -> Node138 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node162 -> Node155 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node162 -> Node163 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node163 [label="secp256k1_schnorr_sig_sign",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d84/schnorr_8h.html#ab58ca77446a7d8daff985d07d43e7175"];
  Node162 -> Node164 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node164 [label="secp256k1_schnorr_msghash\l_sha256",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dab/schnorr_2main__impl_8h.html#aceb4e15773d1a0ef0bd3b13e7339a199"];
  Node164 -> Node165 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node165 [label="secp256k1_sha256_initialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd7/secp256k1_2src_2hash_8h.html#abcb6a95ed605c2bfb19eda1ced4a8f7e"];
  Node164 -> Node166 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node166 [label="secp256k1_sha256_write",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd7/secp256k1_2src_2hash_8h.html#adfccd8d918a52e1cec42ea89a4c3f8ab"];
  Node164 -> Node167 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node167 [label="secp256k1_sha256_finalize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd7/secp256k1_2src_2hash_8h.html#ab88a555e2b13d6d06e20a6a459abae08"];
  Node132 -> Node168 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node168 [label="secp256k1_schnorr_partial\l_combine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df6/secp256k1__schnorr_8h.html#a3e2e970becbc63f9d1cd0ef054488b58",tooltip="Combine multiple Schnorr partial signatures. "];
  Node168 -> Node169 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node169 [label="secp256k1_schnorr_sig\l_combine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d84/schnorr_8h.html#ad2c15e4e57e6bf00cde3a4b229330b12"];
  Node132 -> Node170 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node170 [label="secp256k1_schnorr_verify",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df6/secp256k1__schnorr_8h.html#ab9bcde80df113d29823401a460ea9bcc",tooltip="Verify a signature created by secp256k1_schnorr_sign. "];
  Node170 -> Node171 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node171 [label="secp256k1_ecmult_context\l_is_built",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d94/ecmult_8h.html#aa4f6f213989d3ec35850c40c8f1b313b"];
  Node170 -> Node155 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node170 -> Node172 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node172 [label="secp256k1_schnorr_sig\l_verify",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d84/schnorr_8h.html#ad8ac32b20746524ea3b97ab609117daa"];
  Node170 -> Node164 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
