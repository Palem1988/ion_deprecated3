digraph "run_schnorr_tests"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="run_schnorr_tests",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="test_schnorr_end_to_end",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d1d/schnorr_2tests__impl_8h.html#a0fadfae101d2df588a044f55eafcc0e6"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="random_scalar_order_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d7f/tests_8c.html#a51e09e6745e0afdb0d596ee0f4b3c3f7"];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="secp256k1_rand256_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d0b/testrand_8h.html#ac7dd7cc19d5d0ae9b50791656b57af7b",tooltip="Generate a pseudorandom 32-byte array with long sequences of zero and one bits. "];
  Node2 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="secp256k1_scalar_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a25cc2d45ae1d1765d07c3313cdf46fa0",tooltip="Set a scalar from a big endian byte array. "];
  Node2 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="secp256k1_scalar_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a3f0ac84fe49a1c1f51212582a2c149d4",tooltip="Check whether a scalar equals zero. "];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="secp256k1_scalar_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a4fa08f8af5a23f505b44c9ef1bec1831",tooltip="Convert a scalar to a byte array. "];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="secp256k1_ec_seckey\l_verify",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a366f922fc0c787351e82ff8e3a95f652",tooltip="Verify an ECDSA secret key. "];
  Node7 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="secp256k1_scalar_clear",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#ad8fb9bc2a828903963bf37806d8edd11",tooltip="Clear a scalar to prevent the leak of sensitive data. "];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="secp256k1_ec_pubkey\l_create",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a7438071aa8a6dc4697abe4f4659f2161",tooltip="Compute the public key for a secret key. "];
  Node9 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="secp256k1_ecmult_gen\l_context_is_built",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d76/ecmult__gen_8h.html#a9a40662d6ed2cbab43dbddc25f570f97"];
  Node9 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="secp256k1_ecmult_gen",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d76/ecmult__gen_8h.html#a5ed744c720cbb0a397c8d4c42c637f24",tooltip="Multiply with the generator: R = a*G. "];
  Node9 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="secp256k1_ge_set_gej",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#aa511eebf8cd7419763f06555ed4fb62d",tooltip="Set a group element equal to another which is given in jacobian coordinates. "];
  Node9 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="secp256k1_pubkey_save",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#aa061c9c5c861017bef990e5c4653e0f4"];
  Node13 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="secp256k1_ge_to_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad6499ae629f998e50d8614869ee3c67f",tooltip="Convert a group element to the storage type. "];
  Node13 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="memcpy",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a0f46826ab0466591e136db24394923cf"];
  Node13 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="secp256k1_ge_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ac83592db46af97faf7ba9b9a39a1f6ff",tooltip="Check whether a group element is the point at infinity. "];
  Node13 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="secp256k1_fe_normalize_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a2d45c987537eadb2923c93aa3af9db71",tooltip="Normalize a field element, without constant-time guarantee. "];
  Node13 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="secp256k1_fe_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#abb1017649be14b9ac1823be3c573e542",tooltip="Convert a field element to a 32-byte big endian value. "];
  Node9 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="secp256k1_schnorr_sign",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df6/secp256k1__schnorr_8h.html#ab7e18ffba471cded051c249f5f8cab48",tooltip="Create a signature using a custom EC-Schnorr-SHA256 construction. "];
  Node21 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="secp256k1_schnorr_sig_sign",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d84/schnorr_8h.html#ab58ca77446a7d8daff985d07d43e7175"];
  Node21 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="secp256k1_schnorr_msghash\l_sha256",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dab/schnorr_2main__impl_8h.html#aceb4e15773d1a0ef0bd3b13e7339a199"];
  Node23 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="secp256k1_sha256_initialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd7/secp256k1_2src_2hash_8h.html#abcb6a95ed605c2bfb19eda1ced4a8f7e"];
  Node23 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="secp256k1_sha256_write",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd7/secp256k1_2src_2hash_8h.html#adfccd8d918a52e1cec42ea89a4c3f8ab"];
  Node23 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="secp256k1_sha256_finalize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd7/secp256k1_2src_2hash_8h.html#ab88a555e2b13d6d06e20a6a459abae08"];
  Node21 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="secp256k1_schnorr_verify",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df6/secp256k1__schnorr_8h.html#ab9bcde80df113d29823401a460ea9bcc",tooltip="Verify a signature created by secp256k1_schnorr_sign. "];
  Node27 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="secp256k1_ecmult_context\l_is_built",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d94/ecmult_8h.html#aa4f6f213989d3ec35850c40c8f1b313b"];
  Node27 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="secp256k1_pubkey_load",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#a9966ec041e71010d1593ae2211ffb843"];
  Node29 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="secp256k1_schnorr_sig\l_verify",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d84/schnorr_8h.html#ad8ac32b20746524ea3b97ab609117daa"];
  Node27 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="secp256k1_schnorr_recover",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df6/secp256k1__schnorr_8h.html#aa15ce0fb89d5eacfd2a11a88ee70636c",tooltip="Recover an EC public key from a Schnorr signature created using secp256k1_schnorr_sign. "];
  Node35 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="secp256k1_schnorr_sig\l_recover",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d84/schnorr_8h.html#a41cf1a1167f3b8c7b6fdd4fea6abdbce"];
  Node35 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="secp256k1_rand_bits",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d0b/testrand_8h.html#a70a3e97a30b94a77f4a59807ba01e6ba",tooltip="Generate a pseudorandom number in the range [0..2**bits-1]. "];
  Node1 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="secp256k1_rand_int",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d0b/testrand_8h.html#a2e2064cdf87588f68f4ba3131f5d9353",tooltip="Generate a pseudorandom number in the range [0..range-1]. "];
  Node0 -> Node39 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="test_schnorr_sign_verify",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d1d/schnorr_2tests__impl_8h.html#ac01f457db870f54e7034a59bcf51f5fb"];
  Node39 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="test_schnorr_hash",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d1d/schnorr_2tests__impl_8h.html#a31efca2980eb021090e8b4df3d274d3b",tooltip="Horribly broken hash function. "];
  Node39 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 -> Node41 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="secp256k1_ge_set_gej_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d60/group__impl_8h.html#aea803cf52c0f33c2cb3bfb82d5790d71"];
  Node41 -> Node42 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="secp256k1_fe_inv_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a0090ecfb39b34a8965cc16ae1feca5aa",tooltip="Potentially faster version of secp256k1_fe_inv, without constant-time guarantee. "];
  Node41 -> Node43 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="secp256k1_fe_sqr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a6cbe550ca5eb35e683b1c8d68d8de26b",tooltip="Sets a field element to be the square of another. "];
  Node41 -> Node44 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="secp256k1_fe_mul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a542b97d2574d9687c563d002587cf9a2",tooltip="Sets a field element to be the product of two others. "];
  Node41 -> Node45 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="secp256k1_fe_set_int",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a4bfba9980b6d6960ad623f1ddbbc547e",tooltip="Set a field element equal to a small integer. "];
  Node39 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node46 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="test_schnorr_recovery",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d1d/schnorr_2tests__impl_8h.html#afe1ab7f4400ea6152deaeea5959aa0bc"];
  Node46 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node47 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="test_schnorr_threshold",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d1d/schnorr_2tests__impl_8h.html#a7c79e0204a103b99844bdf1b2ac4cb57"];
  Node47 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node48 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="secp256k1_schnorr_generate\l_nonce_pair",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df6/secp256k1__schnorr_8h.html#a62dd4ce1d4843fe3a4d73ee44d142cb3",tooltip="Generate a nonce pair deterministically for use with secp256k1_schnorr_partial_sign. "];
  Node48 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node49 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="secp256k1_ec_pubkey\l_combine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a4d9b18720afc67f3685a9f171bac6737",tooltip="Add a number of public keys together. "];
  Node49 -> Node50 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="secp256k1_gej_set_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a2c6b24a2db08260d89e891eab7035b2c",tooltip="Set a group element (jacobian) equal to the point at infinity. "];
  Node49 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 -> Node51 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="secp256k1_gej_add_ge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a586b55d5921edcd68799f584c0a3c58d",tooltip="Set r equal to the sum of a and b (with b given in affine coordinates, and not infinity). "];
  Node49 -> Node52 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="secp256k1_gej_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a33786d5853579c92d46fac51f6a40093",tooltip="Check whether a group element is the point at infinity. "];
  Node49 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node53 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="secp256k1_schnorr_partial_sign",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df6/secp256k1__schnorr_8h.html#a9887da00f1d053c0c86b865bad5b8d82",tooltip="Produce a partial Schnorr signature, which can be combined using secp256k1_schnorr_partial_combine, to end up with a full signature that is verifiable using secp256k1_schnorr_verify. "];
  Node53 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 -> Node54 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 [label="secp256k1_schnorr_partial\l_combine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/df6/secp256k1__schnorr_8h.html#a3e2e970becbc63f9d1cd0ef054488b58",tooltip="Combine multiple Schnorr partial signatures. "];
  Node54 -> Node55 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="secp256k1_schnorr_sig\l_combine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d84/schnorr_8h.html#ad2c15e4e57e6bf00cde3a4b229330b12"];
  Node47 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
