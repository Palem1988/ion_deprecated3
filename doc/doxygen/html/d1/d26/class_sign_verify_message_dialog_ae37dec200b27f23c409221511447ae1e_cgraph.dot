digraph "SignVerifyMessageDialog::on_verifyMessageButton_VM_clicked"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node114 [label="SignVerifyMessageDialog\l::on_verifyMessageButton\l_VM_clicked",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node114 -> Node115 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node115 [label="DecodeBase64",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d2d/util_8cpp.html#a224a1ec4dc69c9463abf0e8ae767af0d"];
  Node114 -> Node116 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node116 [label="CPubKey::RecoverCompact",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d4e/class_c_pub_key.html#a169505e735a02db385486b0affeb565c"];
  Node116 -> Node117 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 [label="secp256k1_ecdsa_recoverable\l_signature_parse_compact",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d84/secp256k1__recovery_8h.html#a6699b45dc75be70f028ac7d8ffaba46e",tooltip="Parse a compact ECDSA signature (64 bytes + recovery id). "];
  Node117 -> Node118 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node118 [label="secp256k1_scalar_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a25cc2d45ae1d1765d07c3313cdf46fa0",tooltip="Set a scalar from a big endian byte array. "];
  Node117 -> Node119 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node119 [label="secp256k1_ecdsa_recoverable\l_signature_save",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d5d/recovery_2main__impl_8h.html#a58a8a03b17aeb5cb4daf2940a58663b9"];
  Node119 -> Node120 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node120 [label="memcpy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a0f46826ab0466591e136db24394923cf"];
  Node120 -> Node121 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 [label="memmove",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a9778d49e9029dd75bc53ecbbf9f5e9a1"];
  Node120 -> Node122 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node122 [label="__chk_fail",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a424ac71631da5ada2976630ff67051d1"];
  Node119 -> Node123 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node123 [label="secp256k1_scalar_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a4fa08f8af5a23f505b44c9ef1bec1831",tooltip="Convert a scalar to a byte array. "];
  Node116 -> Node124 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node124 [label="secp256k1_ecdsa_recover",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d84/secp256k1__recovery_8h.html#a7e156c6f4be24b07f4a563210dcb1a2e",tooltip="Recover an ECDSA public key from a signature. "];
  Node124 -> Node125 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node125 [label="secp256k1_ecmult_context\l_is_built",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d94/ecmult_8h.html#aa4f6f213989d3ec35850c40c8f1b313b"];
  Node124 -> Node126 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node126 [label="secp256k1_ecdsa_recoverable\l_signature_load",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d5d/recovery_2main__impl_8h.html#aa3ef0903a865dc9a6e42dfe61f75a9e5"];
  Node126 -> Node120 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node126 -> Node118 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node124 -> Node118 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node124 -> Node127 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node127 [label="secp256k1_ecdsa_sig\l_recover",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d5d/recovery_2main__impl_8h.html#a1a831ed991717749ed9d200bb9d3f03b"];
  Node127 -> Node128 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node128 [label="secp256k1_scalar_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a3f0ac84fe49a1c1f51212582a2c149d4",tooltip="Check whether a scalar equals zero. "];
  Node127 -> Node123 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node127 -> Node129 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node129 [label="secp256k1_fe_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a5c86a65052e3b135919c00fe2233a43d",tooltip="Set a field element equal to 32-byte big endian value. "];
  Node127 -> Node130 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node130 [label="secp256k1_fe_cmp_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#af372f2088796ef5338bb43dbb6dd5277",tooltip="Compare two field elements. "];
  Node127 -> Node131 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node131 [label="secp256k1_fe_add",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a7512f80b60598e4af89c004890880fc7",tooltip="Adds a field element to another. "];
  Node127 -> Node132 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node132 [label="secp256k1_ge_set_xo_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a3c3d9154b093bb4ed48ba55e4c28a0b5",tooltip="Set a group element (affine) equal to the point with the given X coordinate, and given oddness for Y..."];
  Node127 -> Node133 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node133 [label="secp256k1_gej_set_ge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad5f813e26afb239f03e83f0e61e05498",tooltip="Set a group element (jacobian) equal to another which is given in affine coordinates. "];
  Node127 -> Node134 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node134 [label="secp256k1_scalar_inverse_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a58e84d0cabe81139df5c71759f833855",tooltip="Compute the inverse of a scalar (modulo the group order), without constant-time guarantee. "];
  Node127 -> Node135 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node135 [label="secp256k1_scalar_mul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a89db15f705c8eafcd10c08181523acd0",tooltip="Multiply two scalars (modulo the group order). "];
  Node127 -> Node136 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node136 [label="secp256k1_scalar_negate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#aa3f1c1d4536adf835ee256878c222968",tooltip="Compute the complement of a scalar (modulo the group order). "];
  Node127 -> Node137 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node137 [label="secp256k1_ecmult",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d94/ecmult_8h.html#aacf8b6ba48671daf24d549adb176366c",tooltip="Double multiply: R = na*A + ng*G. "];
  Node127 -> Node138 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node138 [label="secp256k1_ge_set_gej_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d60/group__impl_8h.html#aea803cf52c0f33c2cb3bfb82d5790d71"];
  Node138 -> Node139 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node139 [label="secp256k1_fe_inv_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a0090ecfb39b34a8965cc16ae1feca5aa",tooltip="Potentially faster version of secp256k1_fe_inv, without constant-time guarantee. "];
  Node138 -> Node140 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node140 [label="secp256k1_fe_sqr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a6cbe550ca5eb35e683b1c8d68d8de26b",tooltip="Sets a field element to be the square of another. "];
  Node138 -> Node141 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node141 [label="secp256k1_fe_mul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a542b97d2574d9687c563d002587cf9a2",tooltip="Sets a field element to be the product of two others. "];
  Node138 -> Node142 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node142 [label="secp256k1_fe_set_int",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a4bfba9980b6d6960ad623f1ddbbc547e",tooltip="Set a field element equal to a small integer. "];
  Node127 -> Node143 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node143 [label="secp256k1_gej_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a33786d5853579c92d46fac51f6a40093",tooltip="Check whether a group element is the point at infinity. "];
  Node124 -> Node144 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node144 [label="secp256k1_pubkey_save",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#aa061c9c5c861017bef990e5c4653e0f4"];
  Node144 -> Node145 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node145 [label="secp256k1_ge_to_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad6499ae629f998e50d8614869ee3c67f",tooltip="Convert a group element to the storage type. "];
  Node144 -> Node120 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node144 -> Node146 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node146 [label="secp256k1_ge_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ac83592db46af97faf7ba9b9a39a1f6ff",tooltip="Check whether a group element is the point at infinity. "];
  Node144 -> Node147 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node147 [label="secp256k1_fe_normalize_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a2d45c987537eadb2923c93aa3af9db71",tooltip="Normalize a field element, without constant-time guarantee. "];
  Node144 -> Node148 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node148 [label="secp256k1_fe_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#abb1017649be14b9ac1823be3c573e542",tooltip="Convert a field element to a 32-byte big endian value. "];
  Node116 -> Node149 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node149 [label="base_uint::begin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/df7/classbase__uint.html#aaa32054bf4e8fbb31d54a75f6065174d"];
  Node116 -> Node150 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node150 [label="secp256k1_ec_pubkey\l_serialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a34977bf00322e510e881160c421836d7",tooltip="Serialize a pubkey object into a serialized byte sequence. "];
  Node150 -> Node151 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node151 [label="secp256k1_pubkey_load",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#a9966ec041e71010d1593ae2211ffb843"];
  Node151 -> Node120 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node151 -> Node152 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node152 [label="secp256k1_ge_from_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a8c1e7f328284d9ba56404bb8d99bf765",tooltip="Convert a group element back from the storage type. "];
  Node151 -> Node129 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node151 -> Node153 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node153 [label="secp256k1_ge_set_xy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a34ab3d1a9a0a7ff0ed1cedff9db5f73c",tooltip="Set a group element equal to the point with given X and Y coordinates. "];
  Node151 -> Node154 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node154 [label="secp256k1_fe_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a619ec4805df6cc54d70e6682ceebd098",tooltip="Verify whether a field element is zero. "];
  Node150 -> Node155 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node155 [label="secp256k1_eckey_pubkey\l_serialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dff/eckey_8h.html#ae1f52342d70928f16c8e606da59e6aa6"];
  Node116 -> Node156 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node156 [label="CPubKey::Set",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d4e/class_c_pub_key.html#af59bc1d3be119c1f8b49d3c1e2c0797b"];
  Node156 -> Node120 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node114 -> Node157 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node157 [label="Hash",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dfb/hash_8h.html#ab3f6c437460137530d86e09c2c102e99"];
  Node114 -> Node158 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node158 [label="CDataStream::begin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d41/class_c_data_stream.html#a2355d11752d8622badfbc03e9ed192fd"];
  Node114 -> Node159 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node159 [label="CDataStream::end",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d41/class_c_data_stream.html#a66409dbd4403682fe674e2e71173cab4"];
  Node114 -> Node160 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node160 [label="CPubKey::GetID",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d4e/class_c_pub_key.html#a2675f7e6f72eff68e7a5227289feb021"];
  Node160 -> Node161 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node161 [label="CKeyID::CKeyID",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d88/class_c_key_i_d.html#a01dbd3c37820a2ffe89d106c6a7cf53d"];
  Node160 -> Node162 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node162 [label="Hash160",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dfb/hash_8h.html#a4490f70ddae16e9e48460a0416a48a6b"];
  Node160 -> Node163 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node163 [label="base_uint\< 160 \>::size",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/df7/classbase__uint.html#a1f49b034e686269601ea89b0319b8004"];
}
