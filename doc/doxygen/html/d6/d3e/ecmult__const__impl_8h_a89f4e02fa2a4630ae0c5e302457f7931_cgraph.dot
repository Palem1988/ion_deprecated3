digraph "secp256k1_ecmult_const"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="secp256k1_ecmult_const",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="secp256k1_wnaf_const",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d3e/ecmult__const__impl_8h.html#ac252ac4f8c905ddc178ce056bd45b8ec",tooltip="Convert a number to WNAF notation. "];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="secp256k1_scalar_is_high",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#aab66620cbbe49bec3c7c02f4a1219c05",tooltip="Check whether a scalar is higher than the group order divided by 2. "];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="secp256k1_scalar_negate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#aa3f1c1d4536adf835ee256878c222968",tooltip="Compute the complement of a scalar (modulo the group order). "];
  Node1 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="secp256k1_scalar_is_one",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#aa1118b3273d3c9d15541f29373b93e97",tooltip="Check whether a scalar equals one. "];
  Node1 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="secp256k1_scalar_cadd_bit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#ad6596a0249548deb678f0b630204254f",tooltip="Conditionally add a power of two to a scalar. "];
  Node1 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="secp256k1_scalar_cond\l_negate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a520b78be2bca742daa8d5efa5c343291",tooltip="Conditionally negate a number, in constant time. "];
  Node1 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="secp256k1_scalar_is_even",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a3eb65cf9bfad7c430cbb3dc26d494a95",tooltip="Check whether a scalar, considered as an nonnegative integer, is even. "];
  Node1 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="secp256k1_scalar_shr_int",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#ae9fcdf1db22cb93c2a2f06b0a9c957d3",tooltip="Shift a scalar right by some amount strictly between 0 and 16, returning the low bits that were shift..."];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="secp256k1_scalar_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a3f0ac84fe49a1c1f51212582a2c149d4",tooltip="Check whether a scalar equals zero. "];
  Node0 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="secp256k1_gej_set_ge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad5f813e26afb239f03e83f0e61e05498",tooltip="Set a group element (jacobian) equal to another which is given in affine coordinates. "];
  Node0 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="secp256k1_ecmult_odd\l_multiples_table_globalz\l_windowa",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d17/ecmult__impl_8h.html#a33fe27d5aa383017999f80a1cdd8d8ca",tooltip="Fill a table &#39;pre&#39; with precomputed odd multiples of a. "];
  Node11 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="secp256k1_ecmult_odd\l_multiples_table",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d17/ecmult__impl_8h.html#a5008191228d03c7325ea86aa8baaf4dc",tooltip="Fill a table &#39;prej&#39; with precomputed odd multiples of a. "];
  Node12 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="secp256k1_gej_double_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a033aa434a4d0838f649ad757dd44db46",tooltip="Set r equal to the double of a. "];
  Node12 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="secp256k1_ge_set_gej_zinv",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d60/group__impl_8h.html#a6492f6aad16e545239c0ec52780d2e1f"];
  Node14 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="secp256k1_fe_sqr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a6cbe550ca5eb35e683b1c8d68d8de26b",tooltip="Sets a field element to be the square of another. "];
  Node14 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="secp256k1_fe_mul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a542b97d2574d9687c563d002587cf9a2",tooltip="Sets a field element to be the product of two others. "];
  Node12 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="secp256k1_gej_add_ge_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a4d0338f50b08d082caa32f8e72707b55",tooltip="Set r equal to the sum of a and b (with b given in affine coordinates). "];
  Node12 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="secp256k1_ge_globalz\l_set_table_gej",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a5391d63ab98be9202d5f14611133fe35",tooltip="Bring a batch inputs given in jacobian coordinates (with known z-ratios) to the same global z \"denomi..."];
  Node0 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="secp256k1_fe_normalize_weak",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a0aaec7df2f708a451a8e1f41a943d8b1",tooltip="Weakly normalize a field element: reduce it magnitude to 1, but don&#39;t fully normalize. "];
  Node0 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="secp256k1_gej_add_ge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a586b55d5921edcd68799f584c0a3c58d",tooltip="Set r equal to the sum of a and b (with b given in affine coordinates, and not infinity). "];
  Node0 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="secp256k1_gej_double\l_nonzero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a4424d01156ea843dad5a8d27b2feec4f",tooltip="Set r equal to the double of a. "];
  Node0 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="secp256k1_ge_set_gej",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#aa511eebf8cd7419763f06555ed4fb62d",tooltip="Set a group element equal to another which is given in jacobian coordinates. "];
  Node0 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="secp256k1_ge_to_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad6499ae629f998e50d8614869ee3c67f",tooltip="Convert a group element to the storage type. "];
  Node0 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="secp256k1_ge_storage_cmov",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a9a5ec01f9c5a8fcbae1a83217cd96069",tooltip="If flag is true, set *r equal to *a; otherwise leave it. "];
  Node0 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="secp256k1_ge_from_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a8c1e7f328284d9ba56404bb8d99bf765",tooltip="Convert a group element back from the storage type. "];
  Node0 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="secp256k1_ge_neg",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#abcb34de0cfdf82a125e059f4f98de1d9"];
}
