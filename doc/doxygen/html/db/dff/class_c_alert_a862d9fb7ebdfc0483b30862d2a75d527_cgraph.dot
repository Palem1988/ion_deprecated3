digraph "CAlert::CheckSignature"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node28 [label="CAlert::CheckSignature",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node28 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="Params",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/dbf/chainparams_8cpp.html#ace5c5b706d71a324a417dd2db394fd4a",tooltip="Return the currently selected parameters. "];
  Node28 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="CPubKey::Verify",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d4e/class_c_pub_key.html#a5b3fef213b227394ca9d0a1e3baa957e"];
  Node30 -> Node31 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="CPubKey::IsValid",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d4e/class_c_pub_key.html#a4fa94293cf8577fd039b9a133f6c7f30"];
  Node31 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="base_uint\< 160 \>::size",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/df7/classbase__uint.html#a1f49b034e686269601ea89b0319b8004"];
  Node30 -> Node33 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="secp256k1_ec_pubkey\l_parse",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a4e5dc8952c9a7e791376505ef2023ca1",tooltip="Parse a variable-length public key into the pubkey object. "];
  Node33 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="secp256k1_eckey_pubkey\l_parse",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dff/eckey_8h.html#ae0cdb1eef2dc770d70aac0ad50a35e9a"];
  Node33 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="secp256k1_pubkey_save",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#aa061c9c5c861017bef990e5c4653e0f4"];
  Node35 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="secp256k1_ge_to_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad6499ae629f998e50d8614869ee3c67f",tooltip="Convert a group element to the storage type. "];
  Node35 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="memcpy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a0f46826ab0466591e136db24394923cf"];
  Node37 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="memmove",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a9778d49e9029dd75bc53ecbbf9f5e9a1"];
  Node37 -> Node39 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="__chk_fail",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a424ac71631da5ada2976630ff67051d1"];
  Node35 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="secp256k1_ge_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ac83592db46af97faf7ba9b9a39a1f6ff",tooltip="Check whether a group element is the point at infinity. "];
  Node35 -> Node41 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="secp256k1_fe_normalize_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a2d45c987537eadb2923c93aa3af9db71",tooltip="Normalize a field element, without constant-time guarantee. "];
  Node35 -> Node42 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="secp256k1_fe_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#abb1017649be14b9ac1823be3c573e542",tooltip="Convert a field element to a 32-byte big endian value. "];
  Node33 -> Node43 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="secp256k1_ge_clear",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a34793cf48794f089bb28597d1a9f23b2",tooltip="Clear a secp256k1_ge to prevent leaking sensitive information. "];
  Node30 -> Node44 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="CPubKey::size",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d4e/class_c_pub_key.html#a6bb28fcf0a5f799c69f5b7269363b309"];
  Node30 -> Node45 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="ecdsa_signature_parse\l_der_lax",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d8e/pubkey_8cpp.html#acd68762de13ffb2c909fcf12acfea0fd",tooltip="This function is taken from the libsecp256k1 distribution and implements DER parsing for ECDSA signat..."];
  Node45 -> Node46 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="secp256k1_ecdsa_signature\l_parse_compact",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a2aff2802eca3d15ec54298e879579897",tooltip="Parse an ECDSA signature in compact (64 bytes) format. "];
  Node46 -> Node47 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="secp256k1_scalar_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a25cc2d45ae1d1765d07c3313cdf46fa0",tooltip="Set a scalar from a big endian byte array. "];
  Node46 -> Node48 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="secp256k1_ecdsa_signature_save",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#a94e522f94c4819bebf8e854952eb6a8f"];
  Node48 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 -> Node49 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="secp256k1_scalar_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a4fa08f8af5a23f505b44c9ef1bec1831",tooltip="Convert a scalar to a byte array. "];
  Node45 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node50 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="secp256k1_ecdsa_signature\l_normalize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a93ec36a19229f08acc5ff1ca613ab3a1",tooltip="Convert a signature to a normalized lower-S form. "];
  Node50 -> Node51 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="secp256k1_ecdsa_signature_load",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#af2027241c9dfc85fa5b6a3bb5fe41d18"];
  Node51 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 -> Node47 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 -> Node52 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="secp256k1_scalar_is_high",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#aab66620cbbe49bec3c7c02f4a1219c05",tooltip="Check whether a scalar is higher than the group order divided by 2. "];
  Node50 -> Node53 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="secp256k1_scalar_negate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#aa3f1c1d4536adf835ee256878c222968",tooltip="Compute the complement of a scalar (modulo the group order). "];
  Node50 -> Node48 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node54 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 [label="secp256k1_ecdsa_verify",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a41065390f9039c4140ec04999724987d",tooltip="Verify an ECDSA signature. "];
  Node54 -> Node55 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="secp256k1_ecmult_context\l_is_built",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d94/ecmult_8h.html#aa4f6f213989d3ec35850c40c8f1b313b"];
  Node54 -> Node47 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 -> Node51 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 -> Node52 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 -> Node56 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="secp256k1_pubkey_load",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#a9966ec041e71010d1593ae2211ffb843"];
  Node56 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 -> Node57 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node57 [label="secp256k1_ge_from_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a8c1e7f328284d9ba56404bb8d99bf765",tooltip="Convert a group element back from the storage type. "];
  Node56 -> Node58 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node58 [label="secp256k1_fe_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a5c86a65052e3b135919c00fe2233a43d",tooltip="Set a field element equal to 32-byte big endian value. "];
  Node56 -> Node59 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node59 [label="secp256k1_ge_set_xy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a34ab3d1a9a0a7ff0ed1cedff9db5f73c",tooltip="Set a group element equal to the point with given X and Y coordinates. "];
  Node56 -> Node60 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node60 [label="secp256k1_fe_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a619ec4805df6cc54d70e6682ceebd098",tooltip="Verify whether a field element is zero. "];
  Node54 -> Node61 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node61 [label="secp256k1_ecdsa_sig\l_verify",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5d/ecdsa_8h.html#a6e24b57323f9c38b266c5e28b60c92bd"];
  Node30 -> Node62 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node62 [label="base_uint::begin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/df7/classbase__uint.html#aaa32054bf4e8fbb31d54a75f6065174d"];
  Node28 -> Node63 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node63 [label="Hash",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dfb/hash_8h.html#ab3f6c437460137530d86e09c2c102e99"];
  Node28 -> Node64 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node64 [label="error",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d3c/util_8h.html#af8985880cf4ef26df0a5aa2ffcb76662"];
  Node64 -> Node65 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node65 [label="LogPrintStr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d3c/util_8h.html#afd4c3002b2797c0560adddb6af3ca1da"];
  Node65 -> Node66 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node66 [label="DebugPrintInit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d2d/util_8cpp.html#a751ff5f21d880737811136b5e0bcea12"];
  Node66 -> Node67 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node67 [label="GetDataDir",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d2d/util_8cpp.html#ab83866a054745d4b30a3948a1b44beba"];
  Node67 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node67 -> Node68 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node68 [label="CChainParams::NetworkID",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d4f/class_c_chain_params.html#a90dc493ec0c0325c98c3ac06eb99862b"];
  Node67 -> Node69 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node69 [label="GetDefaultDataDir",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d2d/util_8cpp.html#ab272995de020a3bcbf743be630e485c6"];
  Node67 -> Node70 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node70 [label="CChainParams::DataDir",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d4f/class_c_chain_params.html#a959488b5d8e6fe62857940b831d73a78"];
  Node65 -> Node67 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node65 -> Node71 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node71 [label="DateTimeStrFormat",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d2d/util_8cpp.html#a749bc6776c8ec72d7c5e4dea56aee415"];
  Node65 -> Node72 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node72 [label="GetTime",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d2d/util_8cpp.html#a46fac5fba8ba905b5f9acb364f5d8c6f"];
}
