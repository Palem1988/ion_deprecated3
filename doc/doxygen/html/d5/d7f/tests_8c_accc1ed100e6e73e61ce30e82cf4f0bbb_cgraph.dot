digraph "run_point_times_order"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1236 [label="run_point_times_order",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1236 -> Node1237 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1237 [label="secp256k1_ge_set_xo_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a3c3d9154b093bb4ed48ba55e4c28a0b5",tooltip="Set a group element (affine) equal to the point with the given X coordinate, and given oddness for Y..."];
  Node1236 -> Node1238 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1238 [label="secp256k1_ge_is_valid_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a83600b0c4d8e95a8b2e730b4e2f207dc",tooltip="Check whether a group element is valid (i.e., on the curve). "];
  Node1236 -> Node1239 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1239 [label="secp256k1_gej_set_ge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad5f813e26afb239f03e83f0e61e05498",tooltip="Set a group element (jacobian) equal to another which is given in affine coordinates. "];
  Node1236 -> Node1240 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1240 [label="secp256k1_gej_is_valid_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d60/group__impl_8h.html#aaf14c34acab0a279530f58c7e7d50749"];
  Node1240 -> Node1241 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1241 [label="secp256k1_fe_sqr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a6cbe550ca5eb35e683b1c8d68d8de26b",tooltip="Sets a field element to be the square of another. "];
  Node1240 -> Node1242 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1242 [label="secp256k1_fe_mul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a542b97d2574d9687c563d002587cf9a2",tooltip="Sets a field element to be the product of two others. "];
  Node1240 -> Node1243 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1243 [label="secp256k1_fe_mul_int",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a3f7b55267ed0d5135530283da6314416",tooltip="Multiplies the passed field element with a small integer constant. "];
  Node1240 -> Node1244 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1244 [label="secp256k1_fe_add",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a7512f80b60598e4af89c004890880fc7",tooltip="Adds a field element to another. "];
  Node1240 -> Node1245 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1245 [label="secp256k1_fe_normalize_weak",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a0aaec7df2f708a451a8e1f41a943d8b1",tooltip="Weakly normalize a field element: reduce it magnitude to 1, but don&#39;t fully normalize. "];
  Node1240 -> Node1246 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1246 [label="secp256k1_fe_equal_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a16ab4d0dd8bcb5da1b888288063014f3",tooltip="Compare two field elements. "];
  Node1236 -> Node1247 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1247 [label="test_point_times_order",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d7f/tests_8c.html#a5760a028e03f061e5aed00cb7839138e"];
  Node1247 -> Node1248 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1248 [label="random_scalar_order_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d7f/tests_8c.html#a51e09e6745e0afdb0d596ee0f4b3c3f7"];
  Node1248 -> Node1249 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1249 [label="secp256k1_rand256_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d0b/testrand_8h.html#ac7dd7cc19d5d0ae9b50791656b57af7b",tooltip="Generate a pseudorandom 32-byte array with long sequences of zero and one bits. "];
  Node1248 -> Node1250 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1250 [label="secp256k1_scalar_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a25cc2d45ae1d1765d07c3313cdf46fa0",tooltip="Set a scalar from a big endian byte array. "];
  Node1248 -> Node1251 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1251 [label="secp256k1_scalar_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a3f0ac84fe49a1c1f51212582a2c149d4",tooltip="Check whether a scalar equals zero. "];
  Node1247 -> Node1252 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1252 [label="secp256k1_scalar_negate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#aa3f1c1d4536adf835ee256878c222968",tooltip="Compute the complement of a scalar (modulo the group order). "];
  Node1247 -> Node1253 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1253 [label="secp256k1_ecmult",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d94/ecmult_8h.html#aacf8b6ba48671daf24d549adb176366c",tooltip="Double multiply: R = na*A + ng*G. "];
  Node1247 -> Node1254 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1254 [label="secp256k1_gej_add_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a8df21f3ef7412e6c4d39fb67dc0140c6",tooltip="Set r equal to the sum of a and b. "];
  Node1247 -> Node1255 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1255 [label="secp256k1_gej_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a33786d5853579c92d46fac51f6a40093",tooltip="Check whether a group element is the point at infinity. "];
  Node1247 -> Node1240 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1247 -> Node1256 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1256 [label="secp256k1_ge_set_gej",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#aa511eebf8cd7419763f06555ed4fb62d",tooltip="Set a group element equal to another which is given in jacobian coordinates. "];
  Node1247 -> Node1257 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1257 [label="secp256k1_ge_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ac83592db46af97faf7ba9b9a39a1f6ff",tooltip="Check whether a group element is the point at infinity. "];
  Node1247 -> Node1238 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1247 -> Node1258 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1258 [label="secp256k1_eckey_pubkey\l_serialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dff/eckey_8h.html#ae1f52342d70928f16c8e606da59e6aa6"];
  Node1247 -> Node1259 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1259 [label="ge_equals_gej",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d7f/tests_8c.html#a7930deeb9d6815fba34afad98b8dfa69"];
  Node1259 -> Node1241 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1259 -> Node1242 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1259 -> Node1245 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1259 -> Node1246 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1247 -> Node1260 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1260 [label="ge_equals_ge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d7f/tests_8c.html#a6e3e2f3948ab2013a46f0a356f1057ae"];
  Node1260 -> Node1246 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1236 -> Node1241 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1236 -> Node1261 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1261 [label="secp256k1_fe_normalize_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a2d45c987537eadb2923c93aa3af9db71",tooltip="Normalize a field element, without constant-time guarantee. "];
  Node1236 -> Node1246 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
