digraph "scalar_test"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1388 [label="scalar_test",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1388 -> Node1389 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1389 [label="random_scalar_order_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d7f/tests_8c.html#a51e09e6745e0afdb0d596ee0f4b3c3f7"];
  Node1389 -> Node1390 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1390 [label="secp256k1_rand256_test",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d0b/testrand_8h.html#ac7dd7cc19d5d0ae9b50791656b57af7b",tooltip="Generate a pseudorandom 32-byte array with long sequences of zero and one bits. "];
  Node1389 -> Node1391 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1391 [label="secp256k1_scalar_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a25cc2d45ae1d1765d07c3313cdf46fa0",tooltip="Set a scalar from a big endian byte array. "];
  Node1389 -> Node1392 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1392 [label="secp256k1_scalar_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a3f0ac84fe49a1c1f51212582a2c149d4",tooltip="Check whether a scalar equals zero. "];
  Node1388 -> Node1393 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1393 [label="secp256k1_scalar_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a4fa08f8af5a23f505b44c9ef1bec1831",tooltip="Convert a scalar to a byte array. "];
  Node1388 -> Node1394 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1394 [label="secp256k1_scalar_get_num",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a75c8cc0159d53eefaf86a296ba882420",tooltip="Convert a scalar to a number. "];
  Node1388 -> Node1395 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1395 [label="secp256k1_scalar_order\l_get_num",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a54e25150a9e06c01bcc4518b68aa288c",tooltip="Get the order of the group as a number. "];
  Node1388 -> Node1396 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1396 [label="secp256k1_num_shift",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d98/num_8h.html#adc4af999a060e6310b0fdeb99418b31c",tooltip="Right-shift the passed number by bits bits. "];
  Node1388 -> Node1397 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1397 [label="secp256k1_scalar_set_int",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a41cb11650e4dea0fe7ac5b59b9fce9dc",tooltip="Set a scalar to an unsigned integer. "];
  Node1388 -> Node1398 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1398 [label="secp256k1_scalar_get_bits",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a70d7af05e9c9a579ed5cb20d9f22eeba",tooltip="Access bits from a scalar. "];
  Node1388 -> Node1399 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1399 [label="secp256k1_scalar_add",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a83257652850276cd74c7cdd1f9444d9c",tooltip="Add two scalars together (modulo the group order). "];
  Node1388 -> Node1400 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1400 [label="secp256k1_scalar_eq",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a4ba37c67745038e5ff23ca66f051837d",tooltip="Compare two scalars. "];
  Node1388 -> Node1401 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1401 [label="secp256k1_rand_int",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d0b/testrand_8h.html#a2e2064cdf87588f68f4ba3131f5d9353",tooltip="Generate a pseudorandom number in the range [0..range-1]. "];
  Node1388 -> Node1402 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1402 [label="secp256k1_scalar_get\l_bits_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#abede7dbe3b5a38a51b388d46f4c5b52d",tooltip="Access bits from a scalar. "];
  Node1388 -> Node1403 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1403 [label="secp256k1_num_add",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d98/num_8h.html#a2a2407a291e6646a94ade2d5c90f961b",tooltip="Add two (signed) numbers. "];
  Node1388 -> Node1404 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1404 [label="secp256k1_num_mod",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d98/num_8h.html#af30b363582f76292c16da36d8240bbed",tooltip="Replace a number by its remainder modulo m. "];
  Node1388 -> Node1405 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1405 [label="secp256k1_num_eq",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d98/num_8h.html#a8763cac72f4a6760d12cb93897f468c5",tooltip="Test whether two number are equal (including sign). "];
  Node1388 -> Node1406 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1406 [label="secp256k1_num_mul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d98/num_8h.html#a3a5b983d5028a690f4446c10f78c2978",tooltip="Multiply two (signed) numbers. "];
  Node1388 -> Node1407 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1407 [label="secp256k1_scalar_mul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a89db15f705c8eafcd10c08181523acd0",tooltip="Multiply two scalars (modulo the group order). "];
  Node1388 -> Node1392 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1388 -> Node1408 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1408 [label="secp256k1_scalar_is_one",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#aa1118b3273d3c9d15541f29373b93e97",tooltip="Check whether a scalar equals one. "];
  Node1388 -> Node1409 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1409 [label="secp256k1_num_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d98/num_8h.html#ad15ded36e7a6704a702666bd2fd5cbff",tooltip="Check whether a number is zero. "];
  Node1388 -> Node1410 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1410 [label="secp256k1_scalar_is_high",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#aab66620cbbe49bec3c7c02f4a1219c05",tooltip="Check whether a scalar is higher than the group order divided by 2. "];
  Node1388 -> Node1411 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1411 [label="secp256k1_num_cmp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d98/num_8h.html#a2ede1c020471b52d634890089c5374be",tooltip="Compare the absolute value of two numbers. "];
  Node1388 -> Node1412 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1412 [label="secp256k1_scalar_negate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#aa3f1c1d4536adf835ee256878c222968",tooltip="Compute the complement of a scalar (modulo the group order). "];
  Node1388 -> Node1413 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1413 [label="secp256k1_num_sub",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d98/num_8h.html#ad5ad0fd05f4f7d29d75f92fa540ede0a",tooltip="Subtract two (signed) numbers. "];
  Node1388 -> Node1414 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1414 [label="secp256k1_scalar_mul\l_shift_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a8d19fb29bd4c9d863572eba08e97af20",tooltip="Multiply a and b (without taking the modulus!), divide by 2**shift, and round to the nearest integer..."];
  Node1388 -> Node1415 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1415 [label="secp256k1_num_set_bin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d98/num_8h.html#a4a7f500a93d330df44bbe3adda388868",tooltip="Set a number to the value of a binary big-endian string. "];
  Node1388 -> Node1416 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1416 [label="secp256k1_scalar_shr_int",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#ae9fcdf1db22cb93c2a2f06b0a9c957d3",tooltip="Shift a scalar right by some amount strictly between 0 and 16, returning the low bits that were shift..."];
  Node1388 -> Node1417 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1417 [label="secp256k1_scalar_inverse",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#ac048cded7c9731249ada44d489a258d5",tooltip="Compute the inverse of a scalar (modulo the group order). "];
  Node1388 -> Node1418 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1418 [label="secp256k1_num_mod_inverse",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d98/num_8h.html#a96a66a341ddf203e7dbf85d1cca1c178",tooltip="Compute a modular inverse. "];
  Node1388 -> Node1419 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1419 [label="secp256k1_rand_bits",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d0b/testrand_8h.html#a70a3e97a30b94a77f4a59807ba01e6ba",tooltip="Generate a pseudorandom number in the range [0..2**bits-1]. "];
  Node1388 -> Node1420 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1420 [label="secp256k1_scalar_cadd_bit",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#ad6596a0249548deb678f0b630204254f",tooltip="Conditionally add a power of two to a scalar. "];
  Node1388 -> Node1421 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1421 [label="secp256k1_scalar_sqr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a2e65618baa17c59e89149a9f7e632f69",tooltip="Compute the square of a scalar (modulo the group order). "];
}
