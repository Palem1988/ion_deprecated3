digraph "secp256k1_ecdsa_sig_verify"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node45 [label="secp256k1_ecdsa_sig\l_verify",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node45 -> Node46 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="secp256k1_scalar_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a3f0ac84fe49a1c1f51212582a2c149d4",tooltip="Check whether a scalar equals zero. "];
  Node45 -> Node47 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="secp256k1_scalar_inverse_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a58e84d0cabe81139df5c71759f833855",tooltip="Compute the inverse of a scalar (modulo the group order), without constant-time guarantee. "];
  Node45 -> Node48 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="secp256k1_scalar_mul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a89db15f705c8eafcd10c08181523acd0",tooltip="Multiply two scalars (modulo the group order). "];
  Node45 -> Node49 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="secp256k1_gej_set_ge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad5f813e26afb239f03e83f0e61e05498",tooltip="Set a group element (jacobian) equal to another which is given in affine coordinates. "];
  Node45 -> Node50 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node50 [label="secp256k1_ecmult",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d94/ecmult_8h.html#aacf8b6ba48671daf24d549adb176366c",tooltip="Double multiply: R = na*A + ng*G. "];
  Node45 -> Node51 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node51 [label="secp256k1_gej_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a33786d5853579c92d46fac51f6a40093",tooltip="Check whether a group element is the point at infinity. "];
  Node45 -> Node52 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node52 [label="secp256k1_scalar_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a4fa08f8af5a23f505b44c9ef1bec1831",tooltip="Convert a scalar to a byte array. "];
  Node45 -> Node53 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node53 [label="secp256k1_fe_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a5c86a65052e3b135919c00fe2233a43d",tooltip="Set a field element equal to 32-byte big endian value. "];
  Node45 -> Node54 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node54 [label="secp256k1_gej_eq_x_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#aa32fc177f081f16d5979045d3632cf8b",tooltip="Compare the X coordinate of a group element (jacobian). "];
  Node45 -> Node55 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node55 [label="secp256k1_fe_cmp_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#af372f2088796ef5338bb43dbb6dd5277",tooltip="Compare two field elements. "];
  Node45 -> Node56 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node56 [label="secp256k1_fe_add",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a7512f80b60598e4af89c004890880fc7",tooltip="Adds a field element to another. "];
}
