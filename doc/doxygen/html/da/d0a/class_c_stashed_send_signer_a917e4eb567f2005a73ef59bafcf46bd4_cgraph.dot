digraph "CStashedSendSigner::VerifyMessage"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node214 [label="CStashedSendSigner\l::VerifyMessage",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node214 -> Node215 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node215 [label="CPubKey::RecoverCompact",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d4e/class_c_pub_key.html#a169505e735a02db385486b0affeb565c"];
  Node215 -> Node216 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node216 [label="secp256k1_ecdsa_recoverable\l_signature_parse_compact",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d84/secp256k1__recovery_8h.html#a6699b45dc75be70f028ac7d8ffaba46e",tooltip="Parse a compact ECDSA signature (64 bytes + recovery id). "];
  Node216 -> Node217 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node217 [label="secp256k1_scalar_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a25cc2d45ae1d1765d07c3313cdf46fa0",tooltip="Set a scalar from a big endian byte array. "];
  Node216 -> Node218 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node218 [label="secp256k1_ecdsa_recoverable\l_signature_save",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d5d/recovery_2main__impl_8h.html#a58a8a03b17aeb5cb4daf2940a58663b9"];
  Node218 -> Node219 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node219 [label="memcpy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a0f46826ab0466591e136db24394923cf"];
  Node219 -> Node220 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node220 [label="memmove",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a9778d49e9029dd75bc53ecbbf9f5e9a1"];
  Node219 -> Node221 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node221 [label="__chk_fail",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a424ac71631da5ada2976630ff67051d1"];
  Node218 -> Node222 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node222 [label="secp256k1_scalar_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a4fa08f8af5a23f505b44c9ef1bec1831",tooltip="Convert a scalar to a byte array. "];
  Node215 -> Node223 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node223 [label="secp256k1_ecdsa_recover",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d84/secp256k1__recovery_8h.html#a7e156c6f4be24b07f4a563210dcb1a2e",tooltip="Recover an ECDSA public key from a signature. "];
  Node223 -> Node224 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node224 [label="secp256k1_ecmult_context\l_is_built",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d94/ecmult_8h.html#aa4f6f213989d3ec35850c40c8f1b313b"];
  Node223 -> Node225 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node225 [label="secp256k1_ecdsa_recoverable\l_signature_load",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d5d/recovery_2main__impl_8h.html#aa3ef0903a865dc9a6e42dfe61f75a9e5"];
  Node225 -> Node219 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node225 -> Node217 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node223 -> Node217 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node223 -> Node226 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node226 [label="secp256k1_ecdsa_sig\l_recover",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d5d/recovery_2main__impl_8h.html#a1a831ed991717749ed9d200bb9d3f03b"];
  Node226 -> Node227 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node227 [label="secp256k1_scalar_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a3f0ac84fe49a1c1f51212582a2c149d4",tooltip="Check whether a scalar equals zero. "];
  Node226 -> Node222 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node226 -> Node228 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node228 [label="secp256k1_fe_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a5c86a65052e3b135919c00fe2233a43d",tooltip="Set a field element equal to 32-byte big endian value. "];
  Node226 -> Node229 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node229 [label="secp256k1_fe_cmp_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#af372f2088796ef5338bb43dbb6dd5277",tooltip="Compare two field elements. "];
  Node226 -> Node230 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node230 [label="secp256k1_fe_add",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a7512f80b60598e4af89c004890880fc7",tooltip="Adds a field element to another. "];
  Node226 -> Node231 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node231 [label="secp256k1_ge_set_xo_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a3c3d9154b093bb4ed48ba55e4c28a0b5",tooltip="Set a group element (affine) equal to the point with the given X coordinate, and given oddness for Y..."];
  Node226 -> Node232 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node232 [label="secp256k1_gej_set_ge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad5f813e26afb239f03e83f0e61e05498",tooltip="Set a group element (jacobian) equal to another which is given in affine coordinates. "];
  Node226 -> Node233 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node233 [label="secp256k1_scalar_inverse_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a58e84d0cabe81139df5c71759f833855",tooltip="Compute the inverse of a scalar (modulo the group order), without constant-time guarantee. "];
  Node226 -> Node234 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node234 [label="secp256k1_scalar_mul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a89db15f705c8eafcd10c08181523acd0",tooltip="Multiply two scalars (modulo the group order). "];
  Node226 -> Node235 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node235 [label="secp256k1_scalar_negate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#aa3f1c1d4536adf835ee256878c222968",tooltip="Compute the complement of a scalar (modulo the group order). "];
  Node226 -> Node236 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node236 [label="secp256k1_ecmult",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d94/ecmult_8h.html#aacf8b6ba48671daf24d549adb176366c",tooltip="Double multiply: R = na*A + ng*G. "];
  Node226 -> Node237 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node237 [label="secp256k1_ge_set_gej_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d60/group__impl_8h.html#aea803cf52c0f33c2cb3bfb82d5790d71"];
  Node237 -> Node238 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node238 [label="secp256k1_fe_inv_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a0090ecfb39b34a8965cc16ae1feca5aa",tooltip="Potentially faster version of secp256k1_fe_inv, without constant-time guarantee. "];
  Node237 -> Node239 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node239 [label="secp256k1_fe_sqr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a6cbe550ca5eb35e683b1c8d68d8de26b",tooltip="Sets a field element to be the square of another. "];
  Node237 -> Node240 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node240 [label="secp256k1_fe_mul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a542b97d2574d9687c563d002587cf9a2",tooltip="Sets a field element to be the product of two others. "];
  Node237 -> Node241 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node241 [label="secp256k1_fe_set_int",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a4bfba9980b6d6960ad623f1ddbbc547e",tooltip="Set a field element equal to a small integer. "];
  Node226 -> Node242 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node242 [label="secp256k1_gej_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a33786d5853579c92d46fac51f6a40093",tooltip="Check whether a group element is the point at infinity. "];
  Node223 -> Node243 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node243 [label="secp256k1_pubkey_save",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#aa061c9c5c861017bef990e5c4653e0f4"];
  Node243 -> Node244 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node244 [label="secp256k1_ge_to_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad6499ae629f998e50d8614869ee3c67f",tooltip="Convert a group element to the storage type. "];
  Node243 -> Node219 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node243 -> Node245 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node245 [label="secp256k1_ge_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ac83592db46af97faf7ba9b9a39a1f6ff",tooltip="Check whether a group element is the point at infinity. "];
  Node243 -> Node246 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node246 [label="secp256k1_fe_normalize_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a2d45c987537eadb2923c93aa3af9db71",tooltip="Normalize a field element, without constant-time guarantee. "];
  Node243 -> Node247 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node247 [label="secp256k1_fe_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#abb1017649be14b9ac1823be3c573e542",tooltip="Convert a field element to a 32-byte big endian value. "];
  Node215 -> Node248 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node248 [label="base_uint::begin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/df7/classbase__uint.html#aaa32054bf4e8fbb31d54a75f6065174d"];
  Node215 -> Node249 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node249 [label="secp256k1_ec_pubkey\l_serialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a34977bf00322e510e881160c421836d7",tooltip="Serialize a pubkey object into a serialized byte sequence. "];
  Node249 -> Node250 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node250 [label="secp256k1_pubkey_load",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#a9966ec041e71010d1593ae2211ffb843"];
  Node250 -> Node219 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node250 -> Node251 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node251 [label="secp256k1_ge_from_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a8c1e7f328284d9ba56404bb8d99bf765",tooltip="Convert a group element back from the storage type. "];
  Node250 -> Node228 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node250 -> Node252 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node252 [label="secp256k1_ge_set_xy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a34ab3d1a9a0a7ff0ed1cedff9db5f73c",tooltip="Set a group element equal to the point with given X and Y coordinates. "];
  Node250 -> Node253 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node253 [label="secp256k1_fe_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a619ec4805df6cc54d70e6682ceebd098",tooltip="Verify whether a field element is zero. "];
  Node249 -> Node254 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node254 [label="secp256k1_eckey_pubkey\l_serialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dff/eckey_8h.html#ae1f52342d70928f16c8e606da59e6aa6"];
  Node215 -> Node255 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node255 [label="CPubKey::Set",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d4e/class_c_pub_key.html#af59bc1d3be119c1f8b49d3c1e2c0797b"];
  Node255 -> Node219 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node214 -> Node256 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node256 [label="CHashWriter::GetHash",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/def/class_c_hash_writer.html#ae94a937211502eabf19477630090093a"];
  Node214 -> Node257 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node257 [label="_",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d6d/ui__interface_8h.html#aad133bb6103b53cebf03fd01e2f11ba1",tooltip="Translation function: Call Translate signal on UI interface, which returns a boost::optional result..."];
  Node214 -> Node258 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node258 [label="CPubKey::GetID",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d4e/class_c_pub_key.html#a2675f7e6f72eff68e7a5227289feb021"];
  Node258 -> Node259 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node259 [label="CKeyID::CKeyID",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d88/class_c_key_i_d.html#a01dbd3c37820a2ffe89d106c6a7cf53d"];
  Node258 -> Node260 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node260 [label="Hash160",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dfb/hash_8h.html#a4490f70ddae16e9e48460a0416a48a6b"];
  Node258 -> Node261 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node261 [label="base_uint\< 160 \>::size",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/df7/classbase__uint.html#a1f49b034e686269601ea89b0319b8004"];
  Node214 -> Node262 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node262 [label="base_uint::ToString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/df7/classbase__uint.html#acccba4d9d51a0c36261718ca0cbb293b"];
}
