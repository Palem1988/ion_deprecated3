digraph "CPubKey::RecoverCompact"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1034 [label="CPubKey::RecoverCompact",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1034 -> Node1035 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1035 [label="secp256k1_ecdsa_recoverable\l_signature_parse_compact",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d84/secp256k1__recovery_8h.html#a6699b45dc75be70f028ac7d8ffaba46e",tooltip="Parse a compact ECDSA signature (64 bytes + recovery id). "];
  Node1035 -> Node1036 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1036 [label="secp256k1_scalar_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a25cc2d45ae1d1765d07c3313cdf46fa0",tooltip="Set a scalar from a big endian byte array. "];
  Node1035 -> Node1037 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1037 [label="secp256k1_ecdsa_recoverable\l_signature_save",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d5d/recovery_2main__impl_8h.html#a58a8a03b17aeb5cb4daf2940a58663b9"];
  Node1037 -> Node1038 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1038 [label="memcpy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a0f46826ab0466591e136db24394923cf"];
  Node1038 -> Node1039 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1039 [label="memmove",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a9778d49e9029dd75bc53ecbbf9f5e9a1"];
  Node1038 -> Node1040 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1040 [label="__chk_fail",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d9f/glibc__compat_8cpp.html#a424ac71631da5ada2976630ff67051d1"];
  Node1037 -> Node1041 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1041 [label="secp256k1_scalar_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a4fa08f8af5a23f505b44c9ef1bec1831",tooltip="Convert a scalar to a byte array. "];
  Node1034 -> Node1042 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1042 [label="secp256k1_ecdsa_recover",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d84/secp256k1__recovery_8h.html#a7e156c6f4be24b07f4a563210dcb1a2e",tooltip="Recover an ECDSA public key from a signature. "];
  Node1042 -> Node1043 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1043 [label="secp256k1_ecmult_context\l_is_built",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d94/ecmult_8h.html#aa4f6f213989d3ec35850c40c8f1b313b"];
  Node1042 -> Node1044 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1044 [label="secp256k1_ecdsa_recoverable\l_signature_load",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d5d/recovery_2main__impl_8h.html#aa3ef0903a865dc9a6e42dfe61f75a9e5"];
  Node1044 -> Node1038 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1044 -> Node1036 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1042 -> Node1036 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1042 -> Node1045 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1045 [label="secp256k1_ecdsa_sig\l_recover",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d5d/recovery_2main__impl_8h.html#a1a831ed991717749ed9d200bb9d3f03b"];
  Node1045 -> Node1046 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1046 [label="secp256k1_scalar_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a3f0ac84fe49a1c1f51212582a2c149d4",tooltip="Check whether a scalar equals zero. "];
  Node1045 -> Node1041 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1045 -> Node1047 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1047 [label="secp256k1_fe_set_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a5c86a65052e3b135919c00fe2233a43d",tooltip="Set a field element equal to 32-byte big endian value. "];
  Node1045 -> Node1048 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1048 [label="secp256k1_fe_cmp_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#af372f2088796ef5338bb43dbb6dd5277",tooltip="Compare two field elements. "];
  Node1045 -> Node1049 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1049 [label="secp256k1_fe_add",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a7512f80b60598e4af89c004890880fc7",tooltip="Adds a field element to another. "];
  Node1045 -> Node1050 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1050 [label="secp256k1_ge_set_xo_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a3c3d9154b093bb4ed48ba55e4c28a0b5",tooltip="Set a group element (affine) equal to the point with the given X coordinate, and given oddness for Y..."];
  Node1045 -> Node1051 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1051 [label="secp256k1_gej_set_ge",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad5f813e26afb239f03e83f0e61e05498",tooltip="Set a group element (jacobian) equal to another which is given in affine coordinates. "];
  Node1045 -> Node1052 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1052 [label="secp256k1_scalar_inverse_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a58e84d0cabe81139df5c71759f833855",tooltip="Compute the inverse of a scalar (modulo the group order), without constant-time guarantee. "];
  Node1045 -> Node1053 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1053 [label="secp256k1_scalar_mul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#a89db15f705c8eafcd10c08181523acd0",tooltip="Multiply two scalars (modulo the group order). "];
  Node1045 -> Node1054 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1054 [label="secp256k1_scalar_negate",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d94/scalar_8h.html#aa3f1c1d4536adf835ee256878c222968",tooltip="Compute the complement of a scalar (modulo the group order). "];
  Node1045 -> Node1055 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1055 [label="secp256k1_ecmult",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d94/ecmult_8h.html#aacf8b6ba48671daf24d549adb176366c",tooltip="Double multiply: R = na*A + ng*G. "];
  Node1045 -> Node1056 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1056 [label="secp256k1_ge_set_gej_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d60/group__impl_8h.html#aea803cf52c0f33c2cb3bfb82d5790d71"];
  Node1056 -> Node1057 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1057 [label="secp256k1_fe_inv_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a0090ecfb39b34a8965cc16ae1feca5aa",tooltip="Potentially faster version of secp256k1_fe_inv, without constant-time guarantee. "];
  Node1056 -> Node1058 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1058 [label="secp256k1_fe_sqr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a6cbe550ca5eb35e683b1c8d68d8de26b",tooltip="Sets a field element to be the square of another. "];
  Node1056 -> Node1059 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1059 [label="secp256k1_fe_mul",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a542b97d2574d9687c563d002587cf9a2",tooltip="Sets a field element to be the product of two others. "];
  Node1056 -> Node1060 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1060 [label="secp256k1_fe_set_int",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a4bfba9980b6d6960ad623f1ddbbc547e",tooltip="Set a field element equal to a small integer. "];
  Node1045 -> Node1061 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1061 [label="secp256k1_gej_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a33786d5853579c92d46fac51f6a40093",tooltip="Check whether a group element is the point at infinity. "];
  Node1042 -> Node1062 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1062 [label="secp256k1_pubkey_save",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#aa061c9c5c861017bef990e5c4653e0f4"];
  Node1062 -> Node1063 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1063 [label="secp256k1_ge_to_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ad6499ae629f998e50d8614869ee3c67f",tooltip="Convert a group element to the storage type. "];
  Node1062 -> Node1038 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1062 -> Node1064 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1064 [label="secp256k1_ge_is_infinity",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#ac83592db46af97faf7ba9b9a39a1f6ff",tooltip="Check whether a group element is the point at infinity. "];
  Node1062 -> Node1065 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1065 [label="secp256k1_fe_normalize_var",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a2d45c987537eadb2923c93aa3af9db71",tooltip="Normalize a field element, without constant-time guarantee. "];
  Node1062 -> Node1066 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1066 [label="secp256k1_fe_get_b32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#abb1017649be14b9ac1823be3c573e542",tooltip="Convert a field element to a 32-byte big endian value. "];
  Node1034 -> Node1067 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1067 [label="base_uint::begin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/df7/classbase__uint.html#aaa32054bf4e8fbb31d54a75f6065174d"];
  Node1034 -> Node1068 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1068 [label="secp256k1_ec_pubkey\l_serialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dd3/secp256k1_8h.html#a34977bf00322e510e881160c421836d7",tooltip="Serialize a pubkey object into a serialized byte sequence. "];
  Node1068 -> Node1069 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1069 [label="secp256k1_pubkey_load",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8c/secp256k1_8c.html#a9966ec041e71010d1593ae2211ffb843"];
  Node1069 -> Node1038 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1069 -> Node1070 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1070 [label="secp256k1_ge_from_storage",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a8c1e7f328284d9ba56404bb8d99bf765",tooltip="Convert a group element back from the storage type. "];
  Node1069 -> Node1047 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1069 -> Node1071 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1071 [label="secp256k1_ge_set_xy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dd1/group_8h.html#a34ab3d1a9a0a7ff0ed1cedff9db5f73c",tooltip="Set a group element equal to the point with given X and Y coordinates. "];
  Node1069 -> Node1072 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1072 [label="secp256k1_fe_is_zero",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d5a/field_8h.html#a619ec4805df6cc54d70e6682ceebd098",tooltip="Verify whether a field element is zero. "];
  Node1068 -> Node1073 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1073 [label="secp256k1_eckey_pubkey\l_serialize",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dff/eckey_8h.html#ae1f52342d70928f16c8e606da59e6aa6"];
  Node1034 -> Node1074 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1074 [label="CPubKey::Set",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d4e/class_c_pub_key.html#af59bc1d3be119c1f8b49d3c1e2c0797b"];
  Node1074 -> Node1038 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
